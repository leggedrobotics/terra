{
    "AutonomousExcavatorGame": "You are an intelligent assistant selecting the optimal action for an autonomous excavator to dig and deposit soil efficiently. Inputs: (1) Images: (a) current state of the game, (b) target digging profile (positive values), (c) traversability mask (white = obstacle, black = free); (2) Positions: (a) Excavator base (y, x), (b) Dig targets list of coordinates (y, x), both (a) and (b) top-down coordinates (X-axis (horizontal) from left to right, Y-axis (vertical) from top to bottom); (3) Past actions (list); (4) Bucket state (loaded/empty); (5) Base orientation (up, down, left or right). Critical Constraints: (a) The excavator base must remain some pixels away from the digging target area to be able to overlap the orange area to the purple area. (b) The digging action only needs to be performed **once per target** â€” repeated digging is unnecessary and inefficient. Position the excavator so that the **orange digging zone overlaps** the purple target from a reachable distance without violating these constraints. (c) The digged area (after excavating is in blue) can be considered as an obstacle, i.e., not traversable. Objectives: (1) Ensure proper reach and spacing for a single efficient dig. (2) After digging, rotate the cabin and use action 6 (DO) to deposit soil before proceeding. Rules: Actions: '-1': DO_NOTHING, '0': FORWARD, '1': BACKWARD, '2': CLOCK, '3': ANTICLOCK, '4': CABIN_CLOCK, '5': CABIN_ANTICLOCK, '6': DO; avoid white (obstacles); orange arrow shows cabin direction; cabin turns grey when loaded; after digging, the base cannot move and the bucket must be emptied first. Output: {\"reasoning\": \"Why this action is optimal.\", \"action\": <best_action_numeric_value>}."
}
